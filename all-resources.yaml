k get all -A -oyaml

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: 3ed91f31705059cfce78b2a3f86218c1e3943fac773859cbd681a891c7dd2201
      cni.projectcalico.org/podIP: 192.168.1.11/32
      cni.projectcalico.org/podIPs: 192.168.1.11/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-backend-
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: loki-backend-7bc764695
      statefulset.kubernetes.io/pod-name: loki-backend-0
    name: loki-backend-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-backend
      uid: 2ff12b81-3e90-42a7-bc27-b0f662a33012
    resourceVersion: "2934"
    uid: b4b78e74-24a3-4a1e-b0be-470319e99276
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: backend
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - env:
      - name: METHOD
        value: WATCH
      - name: LABEL
        value: loki_rule
      - name: FOLDER
        value: /rules
      - name: RESOURCE
        value: both
      - name: WATCH_SERVER_TIMEOUT
        value: "60"
      - name: WATCH_CLIENT_TIMEOUT
        value: "60"
      - name: LOG_LEVEL
        value: INFO
      image: kiwigrid/k8s-sidecar:1.24.3
      imagePullPolicy: IfNotPresent
      name: loki-sc-rules
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /rules
        name: sc-rules-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sfpd8
        readOnly: true
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=backend
      - -legacy-read-mode=false
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/loki
        name: data
      - mountPath: /rules
        name: sc-rules-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sfpd8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-backend-0
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-backend-headless
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-loki-backend-0
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - emptyDir: {}
      name: sc-rules-volume
    - name: kube-api-access-sfpd8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9e0d6767b68dc85c24b5f02d5ce95247e6f64e897f8d3730b2614d814594ef6b
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:09Z"
    - containerID: containerd://b519dcf32331fa8beb78fc5d84f40ac4ecbd11dc25f9affa2748b87f3987bdbe
      image: docker.io/kiwigrid/k8s-sidecar:1.24.3
      imageID: docker.io/kiwigrid/k8s-sidecar@sha256:5af76eebbba79edf4f7471bf1c3d5f2b40858114730c92d95eafe5716abe1fe8
      lastState: {}
      name: loki-sc-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:08Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.11
    podIPs:
    - ip: 192.168.1.11
    qosClass: BestEffort
    startTime: "2024-06-19T05:54:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: fa82ec97f78c5f8f08895a426d669ae7583a0e0b7aea166b99af347824b9dc3a
      cni.projectcalico.org/podIP: 192.168.0.13/32
      cni.projectcalico.org/podIPs: 192.168.0.13/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-backend-
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: loki-backend-7bc764695
      statefulset.kubernetes.io/pod-name: loki-backend-1
    name: loki-backend-1
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-backend
      uid: 2ff12b81-3e90-42a7-bc27-b0f662a33012
    resourceVersion: "2984"
    uid: f7285628-33c8-4c23-be74-4dbaca4eb611
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: backend
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - env:
      - name: METHOD
        value: WATCH
      - name: LABEL
        value: loki_rule
      - name: FOLDER
        value: /rules
      - name: RESOURCE
        value: both
      - name: WATCH_SERVER_TIMEOUT
        value: "60"
      - name: WATCH_CLIENT_TIMEOUT
        value: "60"
      - name: LOG_LEVEL
        value: INFO
      image: kiwigrid/k8s-sidecar:1.24.3
      imagePullPolicy: IfNotPresent
      name: loki-sc-rules
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /rules
        name: sc-rules-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zjps4
        readOnly: true
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=backend
      - -legacy-read-mode=false
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/loki
        name: data
      - mountPath: /rules
        name: sc-rules-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zjps4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-backend-1
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-backend-headless
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-loki-backend-1
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - emptyDir: {}
      name: sc-rules-volume
    - name: kube-api-access-zjps4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a697c2cb9c3e4da92bdb108b431cb45b73eb2698367bb6278121120490469e42
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:20Z"
    - containerID: containerd://53ce72b5e1e8357e3024f15504c0fd3fe140eaa4739d5381592f4908bec764f8
      image: docker.io/kiwigrid/k8s-sidecar:1.24.3
      imageID: docker.io/kiwigrid/k8s-sidecar@sha256:5af76eebbba79edf4f7471bf1c3d5f2b40858114730c92d95eafe5716abe1fe8
      lastState: {}
      name: loki-sc-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:20Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.13
    podIPs:
    - ip: 192.168.0.13
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c77e65abe23cd551deeb5470c2bf8a8b4b45e249a37defaa409ef3c53ed5825d
      cni.projectcalico.org/podIP: 192.168.1.6/32
      cni.projectcalico.org/podIPs: 192.168.1.6/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-canary-
    labels:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      controller-revision-hash: 877fb666
      pod-template-generation: "1"
    name: loki-canary-7l2l9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: loki-canary
      uid: 50b6d670-bef3-4f90-91ae-2bfe8dfc87b3
    resourceVersion: "2779"
    uid: daef18d3-1ca0-425f-a3a3-cf44ab95f3dd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node01
    containers:
    - args:
      - -addr=loki-gateway.default.svc.cluster.local.:80
      - -labelname=pod
      - -labelvalue=$(POD_NAME)
      - -user=self-monitoring
      - -tenant-id=self-monitoring
      - -pass=
      - -push=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: docker.io/grafana/loki-canary:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki-canary
      ports:
      - containerPort: 3500
        name: http-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2bxm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki-canary
    serviceAccountName: loki-canary
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: kube-api-access-p2bxm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1f9ec82f59b62d08ba28561497e541f35a98de6e1ccc42a2280cd7cd8a32386b
      image: docker.io/grafana/loki-canary:3.0.0
      imageID: docker.io/grafana/loki-canary@sha256:28d7c00588aa43d24b84fce49a8c39e11eaadf5011c3460e64c81490fcfd963d
      lastState: {}
      name: loki-canary
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:48Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 05925c5399f7411a40b9747276c0a53c3b6b4a4d433f1ce8572f7f95213c8421
      cni.projectcalico.org/podIP: 192.168.0.4/32
      cni.projectcalico.org/podIPs: 192.168.0.4/32
    creationTimestamp: "2024-06-19T05:53:33Z"
    generateName: loki-canary-
    labels:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      controller-revision-hash: 877fb666
      pod-template-generation: "1"
    name: loki-canary-tzhmq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: loki-canary
      uid: 50b6d670-bef3-4f90-91ae-2bfe8dfc87b3
    resourceVersion: "2784"
    uid: c4bd1482-4494-48eb-ab46-bda12a935802
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - controlplane
    containers:
    - args:
      - -addr=loki-gateway.default.svc.cluster.local.:80
      - -labelname=pod
      - -labelvalue=$(POD_NAME)
      - -user=self-monitoring
      - -tenant-id=self-monitoring
      - -pass=
      - -push=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: docker.io/grafana/loki-canary:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki-canary
      ports:
      - containerPort: 3500
        name: http-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8b8zv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki-canary
    serviceAccountName: loki-canary
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: kube-api-access-8b8zv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://be8fcd08bfee72a46355a289ba93725a0fa460b666e275259b06747532593c10
      image: docker.io/grafana/loki-canary:3.0.0
      imageID: docker.io/grafana/loki-canary@sha256:28d7c00588aa43d24b84fce49a8c39e11eaadf5011c3460e64c81490fcfd963d
      lastState: {}
      name: loki-canary
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:40Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.4
    podIPs:
    - ip: 192.168.0.4
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-chunks-cache-
    labels:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: loki-chunks-cache-dbf664dd6
      name: memcached-chunks-cache
      statefulset.kubernetes.io/pod-name: loki-chunks-cache-0
    name: loki-chunks-cache-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-chunks-cache
      uid: d338fe72-dd50-4149-9459-5d58a270b038
    resourceVersion: "2420"
    uid: 85718d91-b5b8-41c1-958f-0efd92e41a5f
  spec:
    affinity: {}
    containers:
    - args:
      - -m 8192
      - --extended=modern,track_sizes
      - -I 5m
      - -c 16384
      - -v
      - -u 11211
      image: memcached:1.6.23-alpine
      imagePullPolicy: IfNotPresent
      name: memcached
      ports:
      - containerPort: 11211
        name: client
        protocol: TCP
      resources:
        limits:
          memory: 9830Mi
        requests:
          cpu: 500m
          memory: 9830Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2v4jr
        readOnly: true
    - args:
      - --memcached.address=localhost:11211
      - --web.listen-address=0.0.0.0:9150
      image: prom/memcached-exporter:v0.14.2
      imagePullPolicy: IfNotPresent
      name: exporter
      ports:
      - containerPort: 9150
        name: http-metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2v4jr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-chunks-cache-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-chunks-cache
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2v4jr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      message: '0/2 nodes are available: 1 Insufficient cpu, 2 Insufficient memory.
        preemption: 0/2 nodes are available: 2 No preemption victims found for incoming
        pod.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d9356614f4808042352864a89abc47762fa5abd91ab8d6455ae39ed8f40fd3c7
      cni.projectcalico.org/containerID: 7ddb58aea0ae16704c68a45b6550339f913e8677b393b29942927d4e797762ef
      cni.projectcalico.org/podIP: 192.168.1.4/32
      cni.projectcalico.org/podIPs: 192.168.1.4/32
    creationTimestamp: "2024-06-19T05:53:33Z"
    generateName: loki-gateway-6cb4677947-
    labels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      pod-template-hash: 6cb4677947
    name: loki-gateway-6cb4677947-rprwx
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: loki-gateway-6cb4677947
      uid: 9533c220-ac6a-42da-937a-0da37153ce9d
    resourceVersion: "2775"
    uid: 32cb5106-e04b-41c7-b0d7-eb02f9fa8ae4
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: gateway
          topologyKey: kubernetes.io/hostname
    containers:
    - image: docker.io/nginxinc/nginx-unprivileged:1.24-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 8080
        name: http-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/nginx
        name: config
      - mountPath: /tmp
        name: tmp
      - mountPath: /docker-entrypoint.d
        name: docker-entrypoint-d-override
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c9xl7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 101
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 101
    serviceAccount: loki
    serviceAccountName: loki
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: loki-gateway
      name: config
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: docker-entrypoint-d-override
    - name: kube-api-access-c9xl7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2b9f3f1a164933551933c798073f0d22c71de9a89d0d8eb530067c284f63a74f
      image: docker.io/nginxinc/nginx-unprivileged:1.24-alpine
      imageID: docker.io/nginxinc/nginx-unprivileged@sha256:be76a26e238d9242d1778d39fd0c5a0e4676408870ed56063d4062ba654b1e4e
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:40Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.4
    podIPs:
    - ip: 192.168.1.4
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5ccf6de054849c650529eddba7e4c1d6dde7e79291d93059e1d1ca68067e5d5c
      checksum/secrets: 06573763dc90ff6665c7dca1ba8ec15d7ff909a988372a719880d0918da249ab
      cni.projectcalico.org/containerID: f52d51ad0500501dbe582b9fefb46538d0dfc01d1034592db35376debec39695
      cni.projectcalico.org/podIP: 192.168.0.12/32
      cni.projectcalico.org/podIPs: 192.168.0.12/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-minio-
    labels:
      app: minio
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: loki-minio-796bc746f4
      release: loki
      statefulset.kubernetes.io/pod-name: loki-minio-0
    name: loki-minio-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-minio
      uid: 160aff58-6f2a-44af-865c-32d698a41868
    resourceVersion: "2825"
    uid: cb85c55f-8188-40c3-82de-f9a1a6c6b3c8
  spec:
    containers:
    - command:
      - /bin/sh
      - -ce
      - /usr/bin/docker-entrypoint.sh minio server  http://loki-minio-{0...0}.loki-minio-svc.default.svc.cluster.local/export-{0...1}
        -S /etc/minio/certs/ --address :9000 --console-address :9001
      env:
      - name: MINIO_ROOT_USER
        valueFrom:
          secretKeyRef:
            key: rootUser
            name: loki-minio
      - name: MINIO_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: rootPassword
            name: loki-minio
      - name: MINIO_PROMETHEUS_AUTH_TYPE
        value: public
      image: quay.io/minio/minio:RELEASE.2022-09-17T00-09-45Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: http
        protocol: TCP
      - containerPort: 9001
        name: http-console
        protocol: TCP
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /export-0
        name: export-0
      - mountPath: /export-1
        name: export-1
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f8lbv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-minio-0
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: minio-sa
    serviceAccountName: minio-sa
    subdomain: loki-minio-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: export-0
      persistentVolumeClaim:
        claimName: export-0-loki-minio-0
    - name: export-1
      persistentVolumeClaim:
        claimName: export-1-loki-minio-0
    - name: minio-user
      secret:
        defaultMode: 420
        secretName: loki-minio
    - name: kube-api-access-f8lbv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4869b6dfa0c4837d7da50009f91c4773e63a27e4d409b0aedc86bcec89e5dc90
      image: quay.io/minio/minio:RELEASE.2022-09-17T00-09-45Z
      imageID: quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7
      lastState: {}
      name: minio
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:15Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.12
    podIPs:
    - ip: 192.168.0.12
    qosClass: Burstable
    startTime: "2024-06-19T05:53:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: 82322f6cbfdf62fb1e101a77ba6245bc809c2baf5a372ea64fd902c3867485fd
      cni.projectcalico.org/podIP: 192.168.0.6/32
      cni.projectcalico.org/podIPs: 192.168.0.6/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-read-6f78c5964f-
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      pod-template-hash: 6f78c5964f
    name: loki-read-6f78c5964f-4r26j
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: loki-read-6f78c5964f
      uid: 5b98cbfe-48b7-4152-a6ee-63d6d109ad7e
    resourceVersion: "3027"
    uid: 28cc26dd-0778-49c5-9a38-e02e527375de
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: read
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=read
      - -legacy-read-mode=false
      - -common.compactor-grpc-address=loki-backend.default.svc.cluster.local:9095
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/loki
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bllbk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: data
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - name: kube-api-access-bllbk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c04b0cfe28f529da74fab58f9486cc01d5ebb76d194dde663ca7e273327cb69d
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:48Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.6
    podIPs:
    - ip: 192.168.0.6
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: e4e8170ff47cb82f5d14721ba7a68fb26617a9871e12c39794b553a4e0daadba
      cni.projectcalico.org/podIP: 192.168.1.5/32
      cni.projectcalico.org/podIPs: 192.168.1.5/32
    creationTimestamp: "2024-06-19T05:53:33Z"
    generateName: loki-read-6f78c5964f-
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      pod-template-hash: 6f78c5964f
    name: loki-read-6f78c5964f-fwrq5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: loki-read-6f78c5964f
      uid: 5b98cbfe-48b7-4152-a6ee-63d6d109ad7e
    resourceVersion: "3081"
    uid: bf938afd-ccc0-4862-aaa9-a2d76052d570
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: read
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=read
      - -legacy-read-mode=false
      - -common.compactor-grpc-address=loki-backend.default.svc.cluster.local:9095
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/loki
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pxwwk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: data
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - name: kube-api-access-pxwwk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1d4131aab63407bfbb3c2a682d3fc54efdc1760938f4252b31fc982d27905cd0
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:45Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: dd7cbea8cd3211dd88941edea0765153a2cfcb3e9fa6120f6a5c97d5efde2196
      cni.projectcalico.org/podIP: 192.168.0.5/32
      cni.projectcalico.org/podIPs: 192.168.0.5/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-results-cache-
    labels:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: loki-results-cache-7d9bd9db9c
      name: memcached-results-cache
      statefulset.kubernetes.io/pod-name: loki-results-cache-0
    name: loki-results-cache-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-results-cache
      uid: f73ad5d9-f567-4399-be5a-b42e378162fe
    resourceVersion: "2671"
    uid: 4cf09817-17da-42b6-bf9b-8cb911992bcb
  spec:
    affinity: {}
    containers:
    - args:
      - -m 1024
      - --extended=modern,track_sizes
      - -I 5m
      - -c 16384
      - -v
      - -u 11211
      image: memcached:1.6.23-alpine
      imagePullPolicy: IfNotPresent
      name: memcached
      ports:
      - containerPort: 11211
        name: client
        protocol: TCP
      resources:
        limits:
          memory: 1229Mi
        requests:
          cpu: 500m
          memory: 1229Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kldgq
        readOnly: true
    - args:
      - --memcached.address=localhost:11211
      - --web.listen-address=0.0.0.0:9150
      image: prom/memcached-exporter:v0.14.2
      imagePullPolicy: IfNotPresent
      name: exporter
      ports:
      - containerPort: 9150
        name: http-metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kldgq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-results-cache-0
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-results-cache
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kldgq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f25881fe057e0646f17a248db85b28c4925b08603c7f879208cf67900bef9c6a
      image: docker.io/prom/memcached-exporter:v0.14.2
      imageID: docker.io/prom/memcached-exporter@sha256:d8a61419b8416c0090f40b6eb90eb152a4dd1680e23faba5513c3ac84b478b8f
      lastState: {}
      name: exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:56Z"
    - containerID: containerd://4c4fdc8c947268554fb79f993b5ea94c189559d81d2b89c21514296400bf340f
      image: docker.io/library/memcached:1.6.23-alpine
      imageID: docker.io/library/memcached@sha256:41d19476c100c4b22a07c635e68d4e94e332eadd3afbd8f6bc61cd754d9b5d06
      lastState: {}
      name: memcached
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:43Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.5
    podIPs:
    - ip: 192.168.0.5
    qosClass: Burstable
    startTime: "2024-06-19T05:53:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: 91e8edc7bec8b0db378fb765f59566b73433ad79615fa761bc03ac2b58d1a2c0
      cni.projectcalico.org/podIP: 192.168.1.10/32
      cni.projectcalico.org/podIPs: 192.168.1.10/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-write-
    labels:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: loki-write-bbddc67df
      statefulset.kubernetes.io/pod-name: loki-write-0
    name: loki-write-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-write
      uid: eaf1020f-d72e-40ac-86eb-8d171ed27163
    resourceVersion: "2998"
    uid: 76f152e2-045c-40a9-889a-7c0e5a3bc4c0
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: write
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=write
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /var/loki
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mgjpf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-write-0
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-write-headless
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-loki-write-0
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - name: kube-api-access-mgjpf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:55:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://156e384047e9ca5a8cc4594f3a516f929324a4b0f25d5056f2cf8e77cb861022
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:54:03Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.10
    podIPs:
    - ip: 192.168.1.10
    qosClass: BestEffort
    startTime: "2024-06-19T05:54:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
      cni.projectcalico.org/containerID: 6974c04619c59ab5c4bea6b2113349dca9f1155362e3b8ae082b15067edb2673
      cni.projectcalico.org/podIP: 192.168.0.11/32
      cni.projectcalico.org/podIPs: 192.168.0.11/32
    creationTimestamp: "2024-06-19T05:53:34Z"
    generateName: loki-write-
    labels:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: loki-write-bbddc67df
      statefulset.kubernetes.io/pod-name: loki-write-1
    name: loki-write-1
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: loki-write
      uid: eaf1020f-d72e-40ac-86eb-8d171ed27163
    resourceVersion: "2967"
    uid: 4a451007-af7d-44ab-86bd-a2632889fa8d
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: write
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - -config.file=/etc/loki/config/config.yaml
      - -target=write
      image: docker.io/grafana/loki:3.0.0
      imagePullPolicy: IfNotPresent
      name: loki
      ports:
      - containerPort: 3100
        name: http-metrics
        protocol: TCP
      - containerPort: 9095
        name: grpc
        protocol: TCP
      - containerPort: 7946
        name: http-memberlist
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: http-metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/loki/config
        name: config
      - mountPath: /etc/loki/runtime-config
        name: runtime-config
      - mountPath: /var/loki
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-58xrf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: loki-write-1
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    serviceAccount: loki
    serviceAccountName: loki
    subdomain: loki-write-headless
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-loki-write-1
    - configMap:
        defaultMode: 420
        items:
        - key: config.yaml
          path: config.yaml
        name: loki
      name: config
    - configMap:
        defaultMode: 420
        name: loki-runtime
      name: runtime-config
    - name: kube-api-access-58xrf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:54:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:53:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://12e9a1e89f201ac1105ff27c6ed6d72840c05cd7d562076e83cd8da2d00a7ff4
      image: docker.io/grafana/loki:3.0.0
      imageID: docker.io/grafana/loki@sha256:757b5fadf816a1396f1fea598152947421fa49cb8b2db1ddd2a6e30fae003253
      lastState: {}
      name: loki
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:53:56Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.11
    podIPs:
    - ip: 192.168.0.11
    qosClass: BestEffort
    startTime: "2024-06-19T05:53:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3afc2dc581ee728d1e70fae4b48d69cf5b0a9c0aca8b2bc5f25db7a33fc4ed21
      cni.projectcalico.org/podIP: 192.168.0.2/32
      cni.projectcalico.org/podIPs: 192.168.0.2/32
    creationTimestamp: "2024-06-08T06:10:27Z"
    generateName: calico-kube-controllers-75bdb5b75d-
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 75bdb5b75d
    name: calico-kube-controllers-75bdb5b75d-znr65
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-kube-controllers-75bdb5b75d
      uid: f2628146-ba36-4037-986f-a883d3417c82
    resourceVersion: "2118"
    uid: daa22c83-09cc-4433-8146-e825c84e393a
  spec:
    containers:
    - env:
      - name: ENABLED_CONTROLLERS
        value: node
      - name: DATASTORE_TYPE
        value: kubernetes
      image: docker.io/calico/kube-controllers:v3.24.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -l
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-kube-controllers
      readinessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -r
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mpmhh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-kube-controllers
    serviceAccountName: calico-kube-controllers
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mpmhh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:10:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:10:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://08ca58d888748d9cbbffa92d2d071992cef3dad50b9dc2395017ddc5e4063ed8
      image: docker.io/calico/kube-controllers:v3.24.1
      imageID: docker.io/calico/kube-controllers@sha256:4010b2739792ae5e77a750be909939c0a0a372e378f3c81020754efcf4a91efa
      lastState:
        terminated:
          containerID: containerd://b5dc63842f51ec448eaa331edaf33b5e2473eaa48fa6109ddd15980d83043313
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:49Z"
      name: calico-kube-controllers
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:47Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.2
    podIPs:
    - ip: 192.168.0.2
    qosClass: BestEffort
    startTime: "2024-06-08T06:10:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-08T06:28:29Z"
    generateName: canal-
    labels:
      controller-revision-hash: 6647b7b99d
      k8s-app: canal
      pod-template-generation: "1"
    name: canal-ht7kk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: canal
      uid: 31f665db-c7e9-41fb-91d5-05a8f298d7d1
    resourceVersion: "2052"
    uid: 37968d33-7fa0-4282-bebf-a4e0b3df9ff9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - controlplane
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: USE_POD_CIDR
        value: "true"
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_CNI_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: CALICO_NETWORKING_BACKEND
        value: none
      - name: CLUSTER_TYPE
        value: k8s,canal
      - name: FELIX_IPTABLESREFRESHINTERVAL
        value: "60"
      - name: IP
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/node:v3.24.1
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9099
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pm9sj
        readOnly: true
    - command:
      - /opt/bin/flanneld
      - --ip-masq
      - --kube-subnet-mgr
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FLANNELD_IFACE
        valueFrom:
          configMapKeyRef:
            key: canal_iface
            name: canal-config
      - name: FLANNELD_IP_MASQ
        valueFrom:
          configMapKeyRef:
            key: masquerade
            name: canal-config
      image: quay.io/coreos/flannel:v0.15.1
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pm9sj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/install
      env:
      - name: CALICO_CNI_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: CNI_CONF_NAME
        value: 10-canal.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: canal-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: canal-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.24.1
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pm9sj
        readOnly: true
    - command:
      - calico-node
      - -init
      - -best-effort
      image: docker.io/calico/node:v3.24.1
      imagePullPolicy: IfNotPresent
      name: mount-bpffs
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs
        mountPropagation: Bidirectional
        name: sys-fs
      - mountPath: /var/run/calico
        mountPropagation: Bidirectional
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pm9sj
        readOnly: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: canal
    serviceAccountName: canal
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /sys/fs/
        type: DirectoryOrCreate
      name: sys-fs
    - hostPath:
        path: /sys/fs/bpf
        type: Directory
      name: bpffs
    - hostPath:
        path: /proc
        type: ""
      name: nodeproc
    - configMap:
        defaultMode: 420
        name: canal-config
      name: flannel-cfg
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - name: kube-api-access-pm9sj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3150968c2318b958a62d5dfb8e76ed509c7911d30c724f53dabc4e3e57943929
      image: docker.io/calico/node:v3.24.1
      imageID: docker.io/calico/node@sha256:43f6cee5ca002505ea142b3821a76d585aa0c8d22bc58b7e48589ca7deb48c13
      lastState:
        terminated:
          containerID: containerd://30646e5e2f1ec8c0ab9e37b3c9750615afde8648da0f6e3ad8bb9296bd3b2ac5
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:32Z"
      name: calico-node
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:21Z"
    - containerID: containerd://547a3c7acf0cc66cdabb98094d3980728726aad3a5b18482354822839e33eb54
      image: quay.io/coreos/flannel:v0.15.1
      imageID: quay.io/coreos/flannel@sha256:9a296fbb67790659adc3701e287adde3c59803b7fcefe354f1fc482840cdb3d9
      lastState:
        terminated:
          containerID: containerd://1641912d8f1c699b98d3220057fe9abcb3b4e66e2477b34ca6dd800f89e0284d
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:32Z"
      name: kube-flannel
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:22Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    initContainerStatuses:
    - containerID: containerd://da061c04ef0fca6f72c581c99582124b4ab6d220104f67005ba41b2ab8cfd71e
      image: docker.io/calico/cni:v3.24.1
      imageID: docker.io/calico/cni@sha256:e60b90d7861e872efa720ead575008bc6eca7bee41656735dcaa8210b688fcd9
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://da061c04ef0fca6f72c581c99582124b4ab6d220104f67005ba41b2ab8cfd71e
          exitCode: 0
          finishedAt: "2024-06-19T05:51:20Z"
          reason: Completed
          startedAt: "2024-06-19T05:51:16Z"
    - containerID: containerd://7b7e415c169d397963beba00dd35ca0181cd2ece9b0bd0cbd0fbc1b15bb779bb
      image: docker.io/calico/node:v3.24.1
      imageID: docker.io/calico/node@sha256:43f6cee5ca002505ea142b3821a76d585aa0c8d22bc58b7e48589ca7deb48c13
      lastState: {}
      name: mount-bpffs
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7b7e415c169d397963beba00dd35ca0181cd2ece9b0bd0cbd0fbc1b15bb779bb
          exitCode: 0
          finishedAt: "2024-06-19T05:51:21Z"
          reason: Completed
          startedAt: "2024-06-19T05:51:21Z"
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: Burstable
    startTime: "2024-06-08T06:28:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-08T06:28:29Z"
    generateName: canal-
    labels:
      controller-revision-hash: 6647b7b99d
      k8s-app: canal
      pod-template-generation: "1"
    name: canal-x28k7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: canal
      uid: 31f665db-c7e9-41fb-91d5-05a8f298d7d1
    resourceVersion: "2025"
    uid: 88212693-6817-49cc-86e4-cc4f57f11758
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node01
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: USE_POD_CIDR
        value: "true"
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_CNI_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: CALICO_NETWORKING_BACKEND
        value: none
      - name: CLUSTER_TYPE
        value: k8s,canal
      - name: FELIX_IPTABLESREFRESHINTERVAL
        value: "60"
      - name: IP
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/node:v3.24.1
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9099
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv5jw
        readOnly: true
    - command:
      - /opt/bin/flanneld
      - --ip-masq
      - --kube-subnet-mgr
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FLANNELD_IFACE
        valueFrom:
          configMapKeyRef:
            key: canal_iface
            name: canal-config
      - name: FLANNELD_IP_MASQ
        valueFrom:
          configMapKeyRef:
            key: masquerade
            name: canal-config
      image: quay.io/coreos/flannel:v0.15.1
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv5jw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/install
      env:
      - name: CALICO_CNI_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: CNI_CONF_NAME
        value: 10-canal.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: canal-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: canal-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.24.1
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv5jw
        readOnly: true
    - command:
      - calico-node
      - -init
      - -best-effort
      image: docker.io/calico/node:v3.24.1
      imagePullPolicy: IfNotPresent
      name: mount-bpffs
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs
        mountPropagation: Bidirectional
        name: sys-fs
      - mountPath: /var/run/calico
        mountPropagation: Bidirectional
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv5jw
        readOnly: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: canal
    serviceAccountName: canal
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /sys/fs/
        type: DirectoryOrCreate
      name: sys-fs
    - hostPath:
        path: /sys/fs/bpf
        type: Directory
      name: bpffs
    - hostPath:
        path: /proc
        type: ""
      name: nodeproc
    - configMap:
        defaultMode: 420
        name: canal-config
      name: flannel-cfg
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - name: kube-api-access-cv5jw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e934351a371158f7e1bcf6c32a0f64b57ad9809fffa79e59d4fb64dc9890d8c5
      image: docker.io/calico/node:v3.24.1
      imageID: docker.io/calico/node@sha256:43f6cee5ca002505ea142b3821a76d585aa0c8d22bc58b7e48589ca7deb48c13
      lastState:
        terminated:
          containerID: containerd://86317a70f4517489fc462d966624920b986bf5e8f15cdda9ae8921541a3e4938
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:32Z"
      name: calico-node
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:16Z"
    - containerID: containerd://01e4d0322153011ccbf5deb4a49022532da364dedd7f1fd95f28972c7355cfa4
      image: quay.io/coreos/flannel:v0.15.1
      imageID: quay.io/coreos/flannel@sha256:9a296fbb67790659adc3701e287adde3c59803b7fcefe354f1fc482840cdb3d9
      lastState:
        terminated:
          containerID: containerd://8fa35b3ce560d06adaa3e8108c238281d35aaf86b9b9855f6d7d2d42e6cf3bb6
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:32Z"
      name: kube-flannel
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:17Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    initContainerStatuses:
    - containerID: containerd://5b51f9c1186b673f9b50c575c57f252ad1f92328e2d8ae6bf7bd626b096366fd
      image: docker.io/calico/cni:v3.24.1
      imageID: docker.io/calico/cni@sha256:e60b90d7861e872efa720ead575008bc6eca7bee41656735dcaa8210b688fcd9
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://5b51f9c1186b673f9b50c575c57f252ad1f92328e2d8ae6bf7bd626b096366fd
          exitCode: 0
          finishedAt: "2024-06-19T05:51:14Z"
          reason: Completed
          startedAt: "2024-06-19T05:51:13Z"
    - containerID: containerd://fb6436da08a8e70cb80e952138fd6efc7ea55cf9b13c0d793f99f4e1555ac955
      image: docker.io/calico/node:v3.24.1
      imageID: docker.io/calico/node@sha256:43f6cee5ca002505ea142b3821a76d585aa0c8d22bc58b7e48589ca7deb48c13
      lastState: {}
      name: mount-bpffs
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fb6436da08a8e70cb80e952138fd6efc7ea55cf9b13c0d793f99f4e1555ac955
          exitCode: 0
          finishedAt: "2024-06-19T05:51:15Z"
          reason: Completed
          startedAt: "2024-06-19T05:51:15Z"
    phase: Running
    podIP: 172.30.2.2
    podIPs:
    - ip: 172.30.2.2
    qosClass: Burstable
    startTime: "2024-06-08T06:28:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e219f82e9750d3a3da5bc623ca7bfd6c922e96cd6ff07c1f412c321dc9d3d8bf
      cni.projectcalico.org/podIP: 192.168.1.2/32
      cni.projectcalico.org/podIPs: 192.168.1.2/32
    creationTimestamp: "2024-06-08T06:28:13Z"
    generateName: coredns-5c69dbb7bd-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5c69dbb7bd
    name: coredns-5c69dbb7bd-2hcjc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5c69dbb7bd
      uid: bc46ff09-ff1c-43cc-aff1-1eee647e6ad1
    resourceVersion: "2099"
    uid: 3c29d3f7-1b16-40cb-8654-a8b314b3a1a7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n6fss
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-n6fss
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b77cb7885fd664e459242ddad73f8073fcb0d0e5df245a357dc48d6c86769ee4
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imageID: registry.k8s.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1
      lastState:
        terminated:
          containerID: containerd://7f46bfb9b66683116e7f0d53ef804f0951462ca10491b5d080e97125f29830d1
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:27Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:44Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.2
    podIPs:
    - ip: 192.168.1.2
    qosClass: Burstable
    startTime: "2024-06-08T06:28:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 02293c01959c762d41562b2b4fe400be1302bbd65e714e392ee8698cbc5b75a4
      cni.projectcalico.org/podIP: 192.168.1.3/32
      cni.projectcalico.org/podIPs: 192.168.1.3/32
    creationTimestamp: "2024-06-08T06:28:13Z"
    generateName: coredns-5c69dbb7bd-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5c69dbb7bd
    name: coredns-5c69dbb7bd-wnfxj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5c69dbb7bd
      uid: bc46ff09-ff1c-43cc-aff1-1eee647e6ad1
    resourceVersion: "2103"
    uid: 35a43b66-d2dd-40c1-a059-5f010c092d1b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q7fls
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-q7fls
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://58e3cd1c5d7cf8f7a709824effa477566447ae580a327176e0c4c7a0e868267e
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imageID: registry.k8s.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1
      lastState:
        terminated:
          containerID: containerd://71bd984e6efec474ab23bc74d142408647e99262fcc22bc0e01a1d113caa5bb4
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:27Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:44Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 192.168.1.3
    podIPs:
    - ip: 192.168.1.3
    qosClass: Burstable
    startTime: "2024-06-08T06:28:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://172.30.1.2:2379
      kubernetes.io/config.hash: c34b114b31567febb45d725bc3b61442
      kubernetes.io/config.mirror: c34b114b31567febb45d725bc3b61442
      kubernetes.io/config.seen: "2024-06-08T06:11:15.130934705Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-06-08T06:11:50Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 86f89659-fc0a-4077-857e-e0b2eee5731a
    resourceVersion: "2013"
    uid: 7871de0d-3d77-4121-afc0-4170dc1f599e
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://172.30.1.2:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://172.30.1.2:2380
      - --initial-cluster=controlplane=https://172.30.1.2:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://172.30.1.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://172.30.1.2:2380
      - --name=controlplane
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.12-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 25m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:50:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:50:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://184281f996c846c1940c5a673415e9691c130f942867ccd0d46a93c50dde66d5
      image: registry.k8s.io/etcd:3.5.12-0
      imageID: registry.k8s.io/etcd@sha256:44a8e24dcbba3470ee1fee21d5e88d128c936e9b55d4bc51fbef8086f8ed123b
      lastState:
        terminated:
          containerID: containerd://b3fe02599b6f40050faf200d8cce7460cc4ef2f4a24a2d386c87976e750e6f23
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:31Z"
      name: etcd
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:04Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: Burstable
    startTime: "2024-06-19T05:50:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 172.30.1.2:6443
      kubernetes.io/config.hash: 33d556edd3ae8ef21980288cef77ae8b
      kubernetes.io/config.mirror: 33d556edd3ae8ef21980288cef77ae8b
      kubernetes.io/config.seen: "2024-06-08T06:11:15.120430040Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-06-08T06:11:56Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 86f89659-fc0a-4077-857e-e0b2eee5731a
    resourceVersion: "2027"
    uid: d045f2e6-09d2-4b88-a59c-01f5e543edf0
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=172.30.1.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.30.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 172.30.1.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 172.30.1.2
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 50m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 172.30.1.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:50:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:50:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c744de798bd3574b178db6535ede0c0b6d8a146b1140c0ffd4dd6295f99b7fa9
      image: registry.k8s.io/kube-apiserver:v1.30.0
      imageID: registry.k8s.io/kube-apiserver@sha256:6b8e197b2d39c321189a475ac755a77896e34b56729425590fbc99f3a96468a3
      lastState:
        terminated:
          containerID: containerd://249405c6861aef5deeb1f15ca6fe1715a450ef86d6d710cde32f8fafa2e1508a
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:31Z"
      name: kube-apiserver
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:03Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: Burstable
    startTime: "2024-06-19T05:50:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a57008176420192ec59f17b332df5287
      kubernetes.io/config.mirror: a57008176420192ec59f17b332df5287
      kubernetes.io/config.seen: "2024-06-08T06:11:15.130906306Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-06-08T06:11:47Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 86f89659-fc0a-4077-857e-e0b2eee5731a
    resourceVersion: "2024"
    uid: 76e6d997-30d0-4e5e-a377-5a606cd52e53
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=192.168.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.30.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 25m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fd90f5c42bc75f8aed541c09489f27156efe782d835efdb5f483386bf5d52559
      image: registry.k8s.io/kube-controller-manager:v1.30.0
      imageID: registry.k8s.io/kube-controller-manager@sha256:5f52f00f17d5784b5ca004dffca59710fa1a9eec8d54cebdf9433a1d134150fe
      lastState:
        terminated:
          containerID: containerd://6715b5156821fd9041e4b9e8e435603d226cde7f7d2edd9d4ff87e8b0e015884
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:31Z"
      name: kube-controller-manager
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:04Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: Burstable
    startTime: "2024-06-19T05:51:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-08T06:10:27Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 79cf874c65
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-gbgj8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 0db0cfba-e166-45ab-a6ab-09150100b9ec
    resourceVersion: "2004"
    uid: 30ece2b5-f813-4340-8bda-92305a3dfe5f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - controlplane
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fh8xx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-fh8xx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:10:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:10:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://542c20ca9f748e7679d8143d169683c0b58bb9628804f6962a66813751e3fa21
      image: registry.k8s.io/kube-proxy:v1.30.0
      imageID: registry.k8s.io/kube-proxy@sha256:ec532ff47eaf39822387e51ec73f1f2502eb74658c6303319db88d2c380d0210
      lastState:
        terminated:
          containerID: containerd://b7d77bb02af243d3f55ec4dcb49b596ace007878ea86e40c484f1847daa3934a
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:37Z"
      name: kube-proxy
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:16Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: BestEffort
    startTime: "2024-06-08T06:10:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-08T06:28:04Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 79cf874c65
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-xcj62
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 0db0cfba-e166-45ab-a6ab-09150100b9ec
    resourceVersion: "1948"
    uid: 5ce8c7c0-b493-4494-982c-16fd1dc5f1a0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node01
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hbvf7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-hbvf7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:28:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84aa2fdc29691b44122a2d07bb16918ac30121e6d034ea07eaaf042b06f344bc
      image: registry.k8s.io/kube-proxy:v1.30.0
      imageID: registry.k8s.io/kube-proxy@sha256:ec532ff47eaf39822387e51ec73f1f2502eb74658c6303319db88d2c380d0210
      lastState:
        terminated:
          containerID: containerd://802b405f6ed619c11e7a104b8fc40758be96d5c66a5d04c96ea6d2a171402f87
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:28:09Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:13Z"
    hostIP: 172.30.2.2
    hostIPs:
    - ip: 172.30.2.2
    phase: Running
    podIP: 172.30.2.2
    podIPs:
    - ip: 172.30.2.2
    qosClass: BestEffort
    startTime: "2024-06-08T06:28:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: c1e6902a9da377f9f6820fd8ebe241b4
      kubernetes.io/config.mirror: c1e6902a9da377f9f6820fd8ebe241b4
      kubernetes.io/config.seen: "2024-06-08T06:11:15.137830106Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-06-08T06:11:47Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 86f89659-fc0a-4077-857e-e0b2eee5731a
    resourceVersion: "2012"
    uid: 349f1861-2b4d-4e64-aafc-7eb6a2d24def
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.30.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 25m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8aab4c30d6a3af9eb5137cddda7cc7178b445891ac87d2de726d80f096a4a956
      image: registry.k8s.io/kube-scheduler:v1.30.0
      imageID: registry.k8s.io/kube-scheduler@sha256:2353c3a1803229970fcb571cffc9b2f120372350e01c7381b4b650c4a02b9d67
      lastState:
        terminated:
          containerID: containerd://ac1e83e95cad29c405d215b1bc6d94f06cdb261346aaad6cc652e517a3b85e3b
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:31Z"
      name: kube-scheduler
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:04Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 172.30.1.2
    podIPs:
    - ip: 172.30.1.2
    qosClass: Burstable
    startTime: "2024-06-19T05:51:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f0cb544ea8f462bb77096a380ec0a733521fd54133a8a18e281930cc1aa8e4c3
      cni.projectcalico.org/podIP: 192.168.0.3/32
      cni.projectcalico.org/podIPs: 192.168.0.3/32
    creationTimestamp: "2024-06-08T06:12:16Z"
    generateName: local-path-provisioner-75655fcf79-
    labels:
      app: local-path-provisioner
      pod-template-hash: 75655fcf79
    name: local-path-provisioner-75655fcf79-mrts5
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-75655fcf79
      uid: 851a00e8-e6f4-4458-b3fd-b47c90ac8d68
    resourceVersion: "2143"
    uid: 52387f1d-c617-424c-bd7d-609568dbfbb8
  spec:
    containers:
    - command:
      - local-path-provisioner
      - --debug
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/local-path-provisioner:master-head
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7kvk6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-7kvk6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:12:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-19T05:51:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-08T06:12:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7a5fef55e435d8c3fff7011d4c0d0d00998b891ba8646fbddac22bd08a29bb55
      image: docker.io/rancher/local-path-provisioner:master-head
      imageID: docker.io/rancher/local-path-provisioner@sha256:17f3bce68bbbbc8406c06c80187d8187bc3e50b71ace87fbd77e09b9e7e17c09
      lastState:
        terminated:
          containerID: containerd://7f5cd811378906c44a1075f77d2009f52764d77dd99f9a935132e13dd1a03dd1
          exitCode: 255
          finishedAt: "2024-06-19T05:50:55Z"
          reason: Unknown
          startedAt: "2024-06-08T06:24:49Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-06-19T05:51:56Z"
    hostIP: 172.30.1.2
    hostIPs:
    - ip: 172.30.1.2
    phase: Running
    podIP: 192.168.0.3
    podIPs:
    - ip: 192.168.0.3
    qosClass: BestEffort
    startTime: "2024-06-08T06:12:16Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-06-08T06:10:12Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "196"
    uid: 08388bfd-9a6b-4aab-b987-113398b5086f
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-backend
    namespace: default
    resourceVersion: "2345"
    uid: 745f87d5-f6ac-4cba-a18b-a06f3da37b50
  spec:
    clusterIP: 10.102.40.68
    clusterIPs:
    - 10.102.40.68
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      prometheus.io/service-monitor: "false"
      variant: headless
    name: loki-backend-headless
    namespace: default
    resourceVersion: "2306"
    uid: 45c5fc2f-fb56-4d36-8b91-102dee9b7e47
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-canary
    namespace: default
    resourceVersion: "2354"
    uid: b84a17c0-e037-4292-b74b-d9d26936ba63
  spec:
    clusterIP: 10.105.128.243
    clusterIPs:
    - 10.105.128.243
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3500
      protocol: TCP
      targetPort: http-metrics
    selector:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-chunks-cache
    namespace: default
    resourceVersion: "2307"
    uid: 91459a36-cd55-4583-b6e0-abd9ebbc4792
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: memcached-client
      port: 11211
      protocol: TCP
      targetPort: 11211
    - name: http-metrics
      port: 9150
      protocol: TCP
      targetPort: 9150
    selector:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-gateway
    namespace: default
    resourceVersion: "2347"
    uid: 2233be85-8280-415b-ae35-b1d002b54288
  spec:
    clusterIP: 10.97.169.48
    clusterIPs:
    - 10.97.169.48
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 80
      protocol: TCP
      targetPort: http-metrics
    selector:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-memberlist
    namespace: default
    resourceVersion: "2303"
    uid: fb157c41-6a79-4f41-9839-dbb8af05e3b5
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 7946
      protocol: TCP
      targetPort: http-memberlist
    selector:
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-4.0.15
      heritage: Helm
      monitoring: "true"
      release: loki
    name: loki-minio
    namespace: default
    resourceVersion: "2339"
    uid: f2e26057-249e-45d5-84bf-4e409ea0227b
  spec:
    clusterIP: 10.99.76.14
    clusterIPs:
    - 10.99.76.14
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: minio
      release: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-4.0.15
      heritage: Helm
      release: loki
    name: loki-minio-console
    namespace: default
    resourceVersion: "2333"
    uid: d66f70fd-e17f-4604-8128-0305ca22f0a7
  spec:
    clusterIP: 10.98.113.167
    clusterIPs:
    - 10.98.113.167
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: minio
      release: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-4.0.15
      heritage: Helm
      release: loki
    name: loki-minio-svc
    namespace: default
    resourceVersion: "2302"
    uid: 265278b3-88cc-4183-b546-a0dbc29ffd71
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
    publishNotReadyAddresses: true
    selector:
      app: minio
      release: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      prometheus.io/service-monitor: "false"
    name: loki-query-scheduler-discovery
    namespace: default
    resourceVersion: "2305"
    uid: 0464f58e-2b95-43e8-9378-5b046c00af2c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-read
    namespace: default
    resourceVersion: "2358"
    uid: 1d0547a7-64e1-4b24-a5c9-2325809cdf37
  spec:
    clusterIP: 10.111.129.20
    clusterIPs:
    - 10.111.129.20
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      prometheus.io/service-monitor: "false"
      variant: headless
    name: loki-read-headless
    namespace: default
    resourceVersion: "2308"
    uid: 1d4a5701-e28b-4f6e-a25c-82337e1edf4c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - appProtocol: tcp
      name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-results-cache
    namespace: default
    resourceVersion: "2304"
    uid: 1263e814-26ef-426e-a540-78db6ca20a95
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: memcached-client
      port: 11211
      protocol: TCP
      targetPort: 11211
    - name: http-metrics
      port: 9150
      protocol: TCP
      targetPort: 9150
    selector:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-write
    namespace: default
    resourceVersion: "2324"
    uid: 5a7e556f-47d3-4e96-aaf1-92ecd920248d
  spec:
    clusterIP: 10.106.221.84
    clusterIPs:
    - 10.106.221.84
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:32Z"
    labels:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      prometheus.io/service-monitor: "false"
      variant: headless
    name: loki-write-headless
    namespace: default
    resourceVersion: "2301"
    uid: dedb4eb9-9976-4c85-b2ae-a2a3e771b581
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: http-metrics
    - appProtocol: tcp
      name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-06-08T06:10:13Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "237"
    uid: 639bb62a-66e3-4fde-8165-aaf35f10a1ee
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-canary
    namespace: default
    resourceVersion: "2785"
    uid: 50b6d670-bef3-4f90-91ae-2bfe8dfc87b3
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: canary
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: canary
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
      spec:
        containers:
        - args:
          - -addr=loki-gateway.default.svc.cluster.local.:80
          - -labelname=pod
          - -labelvalue=$(POD_NAME)
          - -user=self-monitoring
          - -tenant-id=self-monitoring
          - -pass=
          - -push=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: docker.io/grafana/loki-canary:3.0.0
          imagePullPolicy: IfNotPresent
          name: loki-canary
          ports:
          - containerPort: 3500
            name: http-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        serviceAccount: loki-canary
        serviceAccountName: loki-canary
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"k8s-app":"canal"},"name":"canal","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"canal"}},"template":{"metadata":{"labels":{"k8s-app":"canal"}},"spec":{"containers":[{"env":[{"name":"DATASTORE_TYPE","value":"kubernetes"},{"name":"USE_POD_CIDR","value":"true"},{"name":"WAIT_FOR_DATASTORE","value":"true"},{"name":"NODENAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CALICO_CNI_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"CALICO_NETWORKING_BACKEND","value":"none"},{"name":"CLUSTER_TYPE","value":"k8s,canal"},{"name":"FELIX_IPTABLESREFRESHINTERVAL","value":"60"},{"name":"IP","value":""},{"name":"CALICO_DISABLE_FILE_LOGGING","value":"true"},{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION","value":"ACCEPT"},{"name":"FELIX_IPV6SUPPORT","value":"false"},{"name":"FELIX_HEALTHENABLED","value":"true"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"docker.io/calico/node:v3.24.1","imagePullPolicy":"IfNotPresent","lifecycle":{"preStop":{"exec":{"command":["/bin/calico-node","-shutdown"]}}},"livenessProbe":{"exec":{"command":["/bin/calico-node","-felix-live"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-node","readinessProbe":{"httpGet":{"host":"localhost","path":"/readiness","port":9099},"periodSeconds":10,"timeoutSeconds":10},"resources":{"requests":{"cpu":"25m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir","readOnly":false},{"mountPath":"/lib/modules","name":"lib-modules","readOnly":true},{"mountPath":"/run/xtables.lock","name":"xtables-lock","readOnly":false},{"mountPath":"/var/run/calico","name":"var-run-calico","readOnly":false},{"mountPath":"/var/lib/calico","name":"var-lib-calico","readOnly":false},{"mountPath":"/var/run/nodeagent","name":"policysync"},{"mountPath":"/sys/fs/bpf","name":"bpffs"},{"mountPath":"/var/log/calico/cni","name":"cni-log-dir","readOnly":true}]},{"command":["/opt/bin/flanneld","--ip-masq","--kube-subnet-mgr"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"FLANNELD_IFACE","valueFrom":{"configMapKeyRef":{"key":"canal_iface","name":"canal-config"}}},{"name":"FLANNELD_IP_MASQ","valueFrom":{"configMapKeyRef":{"key":"masquerade","name":"canal-config"}}}],"image":"quay.io/coreos/flannel:v0.15.1","imagePullPolicy":"IfNotPresent","name":"kube-flannel","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"xtables-lock","readOnly":false},{"mountPath":"/etc/kube-flannel/","name":"flannel-cfg"}]}],"hostNetwork":true,"initContainers":[{"command":["/opt/cni/bin/install"],"env":[{"name":"CALICO_CNI_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"CNI_CONF_NAME","value":"10-canal.conflist"},{"name":"CNI_NETWORK_CONFIG","valueFrom":{"configMapKeyRef":{"key":"cni_network_config","name":"canal-config"}}},{"name":"KUBERNETES_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CNI_MTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"canal-config"}}},{"name":"SLEEP","value":"false"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"docker.io/calico/cni:v3.24.1","imagePullPolicy":"IfNotPresent","name":"install-cni","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/opt/cni/bin","name":"cni-bin-dir"},{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir"}]},{"command":["calico-node","-init","-best-effort"],"image":"docker.io/calico/node:v3.24.1","imagePullPolicy":"IfNotPresent","name":"mount-bpffs","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/sys/fs","mountPropagation":"Bidirectional","name":"sys-fs"},{"mountPath":"/var/run/calico","mountPropagation":"Bidirectional","name":"var-run-calico"},{"mountPath":"/nodeproc","name":"nodeproc","readOnly":true}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-node-critical","serviceAccountName":"canal","terminationGracePeriodSeconds":0,"tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/var/run/calico"},"name":"var-run-calico"},{"hostPath":{"path":"/var/lib/calico"},"name":"var-lib-calico"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"},{"hostPath":{"path":"/sys/fs/","type":"DirectoryOrCreate"},"name":"sys-fs"},{"hostPath":{"path":"/sys/fs/bpf","type":"Directory"},"name":"bpffs"},{"hostPath":{"path":"/proc"},"name":"nodeproc"},{"configMap":{"name":"canal-config"},"name":"flannel-cfg"},{"hostPath":{"path":"/opt/cni/bin"},"name":"cni-bin-dir"},{"hostPath":{"path":"/etc/cni/net.d"},"name":"cni-net-dir"},{"hostPath":{"path":"/var/log/calico/cni"},"name":"cni-log-dir"},{"hostPath":{"path":"/var/run/nodeagent","type":"DirectoryOrCreate"},"name":"policysync"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2024-06-08T06:10:14Z"
    generation: 1
    labels:
      k8s-app: canal
    name: canal
    namespace: kube-system
    resourceVersion: "1881"
    uid: 31f665db-c7e9-41fb-91d5-05a8f298d7d1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: canal
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: canal
      spec:
        containers:
        - env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: USE_POD_CIDR
            value: "true"
          - name: WAIT_FOR_DATASTORE
            value: "true"
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CALICO_CNI_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: CALICO_NETWORKING_BACKEND
            value: none
          - name: CLUSTER_TYPE
            value: k8s,canal
          - name: FELIX_IPTABLESREFRESHINTERVAL
            value: "60"
          - name: IP
          - name: CALICO_DISABLE_FILE_LOGGING
            value: "true"
          - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
            value: ACCEPT
          - name: FELIX_IPV6SUPPORT
            value: "false"
          - name: FELIX_HEALTHENABLED
            value: "true"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: docker.io/calico/node:v3.24.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/calico-node
                - -shutdown
          livenessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-live
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-node
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /readiness
              port: 9099
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/run/calico
            name: var-run-calico
          - mountPath: /var/lib/calico
            name: var-lib-calico
          - mountPath: /var/run/nodeagent
            name: policysync
          - mountPath: /sys/fs/bpf
            name: bpffs
          - mountPath: /var/log/calico/cni
            name: cni-log-dir
            readOnly: true
        - command:
          - /opt/bin/flanneld
          - --ip-masq
          - --kube-subnet-mgr
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: FLANNELD_IFACE
            valueFrom:
              configMapKeyRef:
                key: canal_iface
                name: canal-config
          - name: FLANNELD_IP_MASQ
            valueFrom:
              configMapKeyRef:
                key: masquerade
                name: canal-config
          image: quay.io/coreos/flannel:v0.15.1
          imagePullPolicy: IfNotPresent
          name: kube-flannel
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /etc/kube-flannel/
            name: flannel-cfg
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /opt/cni/bin/install
          env:
          - name: CALICO_CNI_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: CNI_CONF_NAME
            value: 10-canal.conflist
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: canal-config
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CNI_MTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: canal-config
          - name: SLEEP
            value: "false"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: docker.io/calico/cni:v3.24.1
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
        - command:
          - calico-node
          - -init
          - -best-effort
          image: docker.io/calico/node:v3.24.1
          imagePullPolicy: IfNotPresent
          name: mount-bpffs
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs
            mountPropagation: Bidirectional
            name: sys-fs
          - mountPath: /var/run/calico
            mountPropagation: Bidirectional
            name: var-run-calico
          - mountPath: /nodeproc
            name: nodeproc
            readOnly: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: canal
        serviceAccountName: canal
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /var/run/calico
            type: ""
          name: var-run-calico
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /sys/fs/
            type: DirectoryOrCreate
          name: sys-fs
        - hostPath:
            path: /sys/fs/bpf
            type: Directory
          name: bpffs
        - hostPath:
            path: /proc
            type: ""
          name: nodeproc
        - configMap:
            defaultMode: 420
            name: canal-config
          name: flannel-cfg
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/calico/cni
            type: ""
          name: cni-log-dir
        - hostPath:
            path: /var/run/nodeagent
            type: DirectoryOrCreate
          name: policysync
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-06-08T06:10:13Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1680"
    uid: 0db0cfba-e166-45ab-a6ab-09150100b9ec
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.30.0
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-gateway
    namespace: default
    resourceVersion: "2780"
    uid: 2ffcbb98-5ac7-4050-9832-9a315667ce51
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: gateway
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: d9356614f4808042352864a89abc47762fa5abd91ab8d6455ae39ed8f40fd3c7
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: gateway
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
        containers:
        - image: docker.io/nginxinc/nginx-unprivileged:1.24-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8080
            name: http-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx
            name: config
          - mountPath: /tmp
            name: tmp
          - mountPath: /docker-entrypoint.d
            name: docker-entrypoint-d-override
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 101
          runAsGroup: 101
          runAsNonRoot: true
          runAsUser: 101
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: loki-gateway
          name: config
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: docker-entrypoint-d-override
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-06-19T05:54:04Z"
      lastUpdateTime: "2024-06-19T05:54:04Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-06-19T05:53:33Z"
      lastUpdateTime: "2024-06-19T05:54:04Z"
      message: ReplicaSet "loki-gateway-6cb4677947" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-read
    namespace: default
    resourceVersion: "3090"
    uid: 68dacd35-0cba-4d56-ba3e-5c51364e2dcf
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: read
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: read
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          app.kubernetes.io/part-of: memberlist
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: read
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - -config.file=/etc/loki/config/config.yaml
          - -target=read
          - -legacy-read-mode=false
          - -common.compactor-grpc-address=loki-backend.default.svc.cluster.local:9095
          image: docker.io/grafana/loki:3.0.0
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
          - containerPort: 3100
            name: http-metrics
            protocol: TCP
          - containerPort: 9095
            name: grpc
            protocol: TCP
          - containerPort: 7946
            name: http-memberlist
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/loki/config
            name: config
          - mountPath: /etc/loki/runtime-config
            name: runtime-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /var/loki
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: data
        - configMap:
            defaultMode: 420
            items:
            - key: config.yaml
              path: config.yaml
            name: loki
          name: config
        - configMap:
            defaultMode: 420
            name: loki-runtime
          name: runtime-config
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-06-19T05:55:15Z"
      lastUpdateTime: "2024-06-19T05:55:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-06-19T05:53:33Z"
      lastUpdateTime: "2024-06-19T05:55:44Z"
      message: ReplicaSet "loki-read-6f78c5964f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"calico-kube-controllers"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"containers":[{"env":[{"name":"ENABLED_CONTROLLERS","value":"node"},{"name":"DATASTORE_TYPE","value":"kubernetes"}],"image":"docker.io/calico/kube-controllers:v3.24.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/usr/bin/check-status","-l"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-kube-controllers","readinessProbe":{"exec":{"command":["/usr/bin/check-status","-r"]},"periodSeconds":10}}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"calico-kube-controllers","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}]}}}}
    creationTimestamp: "2024-06-08T06:10:14Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
    name: calico-kube-controllers
    namespace: kube-system
    resourceVersion: "2122"
    uid: 0651a3c6-c77f-4273-b6b4-c7fd374f53f8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: docker.io/calico/kube-controllers:v3.24.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-06-08T06:10:27Z"
      lastUpdateTime: "2024-06-08T06:10:50Z"
      message: ReplicaSet "calico-kube-controllers-75bdb5b75d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-06-19T05:51:48Z"
      lastUpdateTime: "2024-06-19T05:51:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-06-08T06:10:13Z"
    generation: 2
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "2110"
    uid: 8e74075d-a6d8-41c9-97b8-3b59d4092e05
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-06-08T06:10:27Z"
      lastUpdateTime: "2024-06-08T06:10:46Z"
      message: ReplicaSet "coredns-5c69dbb7bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-06-19T05:51:45Z"
      lastUpdateTime: "2024-06-19T05:51:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"local-path-provisioner","namespace":"local-path-storage"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"local-path-provisioner"}},"template":{"metadata":{"labels":{"app":"local-path-provisioner"}},"spec":{"containers":[{"command":["local-path-provisioner","--debug","start","--config","/etc/config/config.json"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"rancher/local-path-provisioner:master-head","imagePullPolicy":"IfNotPresent","name":"local-path-provisioner","volumeMounts":[{"mountPath":"/etc/config/","name":"config-volume"}]}],"serviceAccountName":"local-path-provisioner-service-account","volumes":[{"configMap":{"name":"local-path-config"},"name":"config-volume"}]}}}}
    creationTimestamp: "2024-06-08T06:12:16Z"
    generation: 1
    name: local-path-provisioner
    namespace: local-path-storage
    resourceVersion: "2145"
    uid: f7cfa73e-6c96-496f-9414-45cf48b49a89
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:master-head
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-06-08T06:12:16Z"
      lastUpdateTime: "2024-06-08T06:12:19Z"
      message: ReplicaSet "local-path-provisioner-75655fcf79" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-06-19T05:51:57Z"
      lastUpdateTime: "2024-06-19T05:51:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      pod-template-hash: 6cb4677947
    name: loki-gateway-6cb4677947
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loki-gateway
      uid: 2ffcbb98-5ac7-4050-9832-9a315667ce51
    resourceVersion: "2778"
    uid: 9533c220-ac6a-42da-937a-0da37153ce9d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: gateway
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        pod-template-hash: 6cb4677947
    template:
      metadata:
        annotations:
          checksum/config: d9356614f4808042352864a89abc47762fa5abd91ab8d6455ae39ed8f40fd3c7
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: gateway
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          pod-template-hash: 6cb4677947
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
        containers:
        - image: docker.io/nginxinc/nginx-unprivileged:1.24-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8080
            name: http-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx
            name: config
          - mountPath: /tmp
            name: tmp
          - mountPath: /docker-entrypoint.d
            name: docker-entrypoint-d-override
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 101
          runAsGroup: 101
          runAsNonRoot: true
          runAsUser: 101
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: loki-gateway
          name: config
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: docker-entrypoint-d-override
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      pod-template-hash: 6f78c5964f
    name: loki-read-6f78c5964f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loki-read
      uid: 68dacd35-0cba-4d56-ba3e-5c51364e2dcf
    resourceVersion: "3085"
    uid: 5b98cbfe-48b7-4152-a6ee-63d6d109ad7e
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/component: read
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        pod-template-hash: 6f78c5964f
    template:
      metadata:
        annotations:
          checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: read
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          app.kubernetes.io/part-of: memberlist
          pod-template-hash: 6f78c5964f
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: read
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - -config.file=/etc/loki/config/config.yaml
          - -target=read
          - -legacy-read-mode=false
          - -common.compactor-grpc-address=loki-backend.default.svc.cluster.local:9095
          image: docker.io/grafana/loki:3.0.0
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
          - containerPort: 3100
            name: http-metrics
            protocol: TCP
          - containerPort: 9095
            name: grpc
            protocol: TCP
          - containerPort: 7946
            name: http-memberlist
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/loki/config
            name: config
          - mountPath: /etc/loki/runtime-config
            name: runtime-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /var/loki
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: data
        - configMap:
            defaultMode: 420
            items:
            - key: config.yaml
              path: config.yaml
            name: loki
          name: config
        - configMap:
            defaultMode: 420
            name: loki-runtime
          name: runtime-config
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-06-08T06:10:27Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 75bdb5b75d
    name: calico-kube-controllers-75bdb5b75d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-kube-controllers
      uid: 0651a3c6-c77f-4273-b6b4-c7fd374f53f8
    resourceVersion: "2119"
    uid: f2628146-ba36-4037-986f-a883d3417c82
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
        pod-template-hash: 75bdb5b75d
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
          pod-template-hash: 75bdb5b75d
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: docker.io/calico/kube-controllers:v3.24.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-06-08T06:10:45Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5c69dbb7bd
    name: coredns-5c69dbb7bd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 8e74075d-a6d8-41c9-97b8-3b59d4092e05
    resourceVersion: "2108"
    uid: bc46ff09-ff1c-43cc-aff1-1eee647e6ad1
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 5c69dbb7bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 5c69dbb7bd
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-06-08T06:10:27Z"
    generation: 3
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7db6d8ff4d
    name: coredns-7db6d8ff4d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 8e74075d-a6d8-41c9-97b8-3b59d4092e05
    resourceVersion: "610"
    uid: 01f677df-7b87-47ae-b5e6-bbfef1a0729d
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 7db6d8ff4d
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 7db6d8ff4d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-06-08T06:12:16Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 75655fcf79
    name: local-path-provisioner-75655fcf79
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: f7cfa73e-6c96-496f-9414-45cf48b49a89
    resourceVersion: "2144"
    uid: 851a00e8-e6f4-4458-b3fd-b47c90ac8d68
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 75655fcf79
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 75655fcf79
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:master-head
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-backend
    namespace: default
    resourceVersion: "2985"
    uid: 2ff12b81-3e90-42a7-bc27-b0f662a33012
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Delete
      whenScaled: Delete
    podManagementPolicy: Parallel
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
    serviceName: loki-backend-headless
    template:
      metadata:
        annotations:
          checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: backend
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          app.kubernetes.io/part-of: memberlist
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: backend
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - env:
          - name: METHOD
            value: WATCH
          - name: LABEL
            value: loki_rule
          - name: FOLDER
            value: /rules
          - name: RESOURCE
            value: both
          - name: WATCH_SERVER_TIMEOUT
            value: "60"
          - name: WATCH_CLIENT_TIMEOUT
            value: "60"
          - name: LOG_LEVEL
            value: INFO
          image: kiwigrid/k8s-sidecar:1.24.3
          imagePullPolicy: IfNotPresent
          name: loki-sc-rules
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /rules
            name: sc-rules-volume
        - args:
          - -config.file=/etc/loki/config/config.yaml
          - -target=backend
          - -legacy-read-mode=false
          image: docker.io/grafana/loki:3.0.0
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
          - containerPort: 3100
            name: http-metrics
            protocol: TCP
          - containerPort: 9095
            name: grpc
            protocol: TCP
          - containerPort: 7946
            name: http-memberlist
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/loki/config
            name: config
          - mountPath: /etc/loki/runtime-config
            name: runtime-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /var/loki
            name: data
          - mountPath: /rules
            name: sc-rules-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 300
        volumes:
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            items:
            - key: config.yaml
              path: config.yaml
            name: loki
          name: config
        - configMap:
            defaultMode: 420
            name: loki-runtime
          name: runtime-config
        - emptyDir: {}
          name: sc-rules-volume
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 2
    collisionCount: 0
    currentReplicas: 2
    currentRevision: loki-backend-7bc764695
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updateRevision: loki-backend-7bc764695
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
      name: memcached-chunks-cache
    name: loki-chunks-cache
    namespace: default
    resourceVersion: "2441"
    uid: d338fe72-dd50-4149-9459-5d58a270b038
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: memcached-chunks-cache
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        name: memcached-chunks-cache
    serviceName: loki-chunks-cache
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: memcached-chunks-cache
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          name: memcached-chunks-cache
      spec:
        affinity: {}
        containers:
        - args:
          - -m 8192
          - --extended=modern,track_sizes
          - -I 5m
          - -c 16384
          - -v
          - -u 11211
          image: memcached:1.6.23-alpine
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
          - containerPort: 11211
            name: client
            protocol: TCP
          resources:
            limits:
              memory: 9830Mi
            requests:
              cpu: 500m
              memory: 9830Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --memcached.address=localhost:11211
          - --web.listen-address=0.0.0.0:9150
          image: prom/memcached-exporter:v0.14.2
          imagePullPolicy: IfNotPresent
          name: exporter
          ports:
          - containerPort: 9150
            name: http-metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 60
    updateStrategy:
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentReplicas: 1
    currentRevision: loki-chunks-cache-dbf664dd6
    observedGeneration: 1
    replicas: 1
    updateRevision: loki-chunks-cache-dbf664dd6
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app: minio
      app.kubernetes.io/managed-by: Helm
      chart: minio-4.0.15
      heritage: Helm
      release: loki
    name: loki-minio
    namespace: default
    resourceVersion: "2829"
    uid: 160aff58-6f2a-44af-865c-32d698a41868
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: minio
        release: loki
    serviceName: loki-minio-svc
    template:
      metadata:
        annotations:
          checksum/config: 5ccf6de054849c650529eddba7e4c1d6dde7e79291d93059e1d1ca68067e5d5c
          checksum/secrets: 06573763dc90ff6665c7dca1ba8ec15d7ff909a988372a719880d0918da249ab
        creationTimestamp: null
        labels:
          app: minio
          release: loki
        name: loki-minio
      spec:
        containers:
        - command:
          - /bin/sh
          - -ce
          - /usr/bin/docker-entrypoint.sh minio server  http://loki-minio-{0...0}.loki-minio-svc.default.svc.cluster.local/export-{0...1}
            -S /etc/minio/certs/ --address :9000 --console-address :9001
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                key: rootUser
                name: loki-minio
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: rootPassword
                name: loki-minio
          - name: MINIO_PROMETHEUS_AUTH_TYPE
            value: public
          image: quay.io/minio/minio:RELEASE.2022-09-17T00-09-45Z
          imagePullPolicy: IfNotPresent
          name: minio
          ports:
          - containerPort: 9000
            name: http
            protocol: TCP
          - containerPort: 9001
            name: http-console
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /export-0
            name: export-0
          - mountPath: /export-1
            name: export-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: minio-sa
        serviceAccountName: minio-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: minio-user
          secret:
            defaultMode: 420
            secretName: loki-minio
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: export-0
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
      status:
        phase: Pending
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: export-1
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: loki-minio-796bc746f4
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: loki-minio-796bc746f4
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
      name: memcached-results-cache
    name: loki-results-cache
    namespace: default
    resourceVersion: "2675"
    uid: f73ad5d9-f567-4399-be5a-b42e378162fe
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: memcached-results-cache
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        name: memcached-results-cache
    serviceName: loki-results-cache
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: memcached-results-cache
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          name: memcached-results-cache
      spec:
        affinity: {}
        containers:
        - args:
          - -m 1024
          - --extended=modern,track_sizes
          - -I 5m
          - -c 16384
          - -v
          - -u 11211
          image: memcached:1.6.23-alpine
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
          - containerPort: 11211
            name: client
            protocol: TCP
          resources:
            limits:
              memory: 1229Mi
            requests:
              cpu: 500m
              memory: 1229Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --memcached.address=localhost:11211
          - --web.listen-address=0.0.0.0:9150
          image: prom/memcached-exporter:v0.14.2
          imagePullPolicy: IfNotPresent
          name: exporter
          ports:
          - containerPort: 9150
            name: http-metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 60
    updateStrategy:
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: loki-results-cache-7d9bd9db9c
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: loki-results-cache-7d9bd9db9c
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: loki
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-06-19T05:53:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: write
      app.kubernetes.io/instance: loki
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
      app.kubernetes.io/version: 3.0.0
      helm.sh/chart: loki-6.6.3
    name: loki-write
    namespace: default
    resourceVersion: "3005"
    uid: eaf1020f-d72e-40ac-86eb-8d171ed27163
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: write
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
    serviceName: loki-write-headless
    template:
      metadata:
        annotations:
          checksum/config: 62dcad17d9932a80434500de5e3f7436f2fd18340468da00fd85c5dbf77a95e9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: write
          app.kubernetes.io/instance: loki
          app.kubernetes.io/name: loki
          app.kubernetes.io/part-of: memberlist
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: write
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - -config.file=/etc/loki/config/config.yaml
          - -target=write
          image: docker.io/grafana/loki:3.0.0
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
          - containerPort: 3100
            name: http-metrics
            protocol: TCP
          - containerPort: 9095
            name: grpc
            protocol: TCP
          - containerPort: 7946
            name: http-memberlist
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/loki/config
            name: config
          - mountPath: /etc/loki/runtime-config
            name: runtime-config
          - mountPath: /var/loki
            name: data
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        serviceAccount: loki
        serviceAccountName: loki
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: config.yaml
              path: config.yaml
            name: loki
          name: config
        - configMap:
            defaultMode: 420
            name: loki-runtime
          name: runtime-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 2
    collisionCount: 0
    currentReplicas: 2
    currentRevision: loki-write-bbddc67df
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updateRevision: loki-write-bbddc67df
    updatedReplicas: 2
kind: List
metadata:
  resourceVersion: ""
